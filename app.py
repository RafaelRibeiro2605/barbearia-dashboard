import streamlit as st
import pandas as pd
import plotly.express as px
from prophet import Prophet
from prophet.plot import plot_plotly


st.set_page_config(page_title="Dashboard Barbearia", layout="wide")
st.title("üìä Dashboard de Vendas - Barbearia")

# --- Carrega os dados ---
df = pd.read_csv("dados.csv", parse_dates=["data"])

@st.cache_data
def treinar_modelo_prophet(df):
    df_treino = df[["data", "vendas"]].rename(columns={"data": "ds", "vendas": "y"})
    modelo = Prophet(yearly_seasonality=False)  # Removendo sazonalidade anual
    modelo.fit(df_treino)
    
    futuro = modelo.make_future_dataframe(periods=30)
    previsao = modelo.predict(futuro)
    
    return modelo, previsao



# --- Pr√©-processamento para gr√°ficos mensais ---
df["mes"] = df["data"].dt.to_period("M").astype(str)

# --- Menu lateral ---
grafico = st.sidebar.selectbox(
    "Selecione o gr√°fico:",
    (
        "Vendas por M√™s",
        "M√©dia de Clientes por M√™s (% Promo√ß√£o)",
        "Clientes por Dia da Semana",
        "Vendas: Com x Sem Promo√ß√£o",
        'Previs√£o de Vendas (Prophet)'
    )
)

# --- Gr√°fico 1: Vendas por m√™s ---
if grafico == "Vendas por M√™s":
    vendas_mensais = df.groupby("mes")["vendas"].sum().reset_index()
    fig = px.bar(vendas_mensais, x="mes", y="vendas", title="Vendas Totais por M√™s", labels={"mes": "M√™s", "vendas": "Vendas (R$)"})
    st.plotly_chart(fig, use_container_width=True)

# --- Gr√°fico 2: M√©dia de clientes por m√™s com cor por promo√ß√£o ---
elif grafico == "M√©dia de Clientes por M√™s (% Promo√ß√£o)":
    mensal = df.groupby("mes").agg({"clientes": "mean", "promocao": "mean"}).reset_index()
    mensal["promo_percent"] = (mensal["promocao"] * 100).round(1)
    fig = px.bar(mensal, x="mes", y="clientes", color="promo_percent",
                 color_continuous_scale="Blues",
                 title="M√©dia de Clientes por M√™s (Cor = % Promo√ß√µes)",
                 labels={"clientes": "Clientes", "promo_percent": "% Promo√ß√£o"})
    st.plotly_chart(fig, use_container_width=True)

# --- Gr√°fico 3: Clientes por dia da semana ---
elif grafico == "Clientes por Dia da Semana":
    df["dia_semana"] = df["data"].dt.day_name()
    media_dia = df.groupby("dia_semana")["clientes"].mean().reindex(
        ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']
    )
    fig = px.bar(x=media_dia.index, y=media_dia.values, title="M√©dia de Clientes por Dia da Semana", labels={"x": "Dia", "y": "Clientes"})
    st.plotly_chart(fig, use_container_width=True)

# --- Gr√°fico 4: Vendas com e sem promo√ß√£o ---
elif grafico == "Vendas: Com x Sem Promo√ß√£o":
    df["tipo_dia"] = df["promocao"].map({1: "Com Promo√ß√£o", 0: "Sem Promo√ß√£o"})
    fig = px.box(df, x="tipo_dia", y="vendas", title="Distribui√ß√£o de Vendas - Com ou Sem Promo√ß√£o")
    st.plotly_chart(fig, use_container_width=True)

# --- Gr√°fico 5: Previs√£o de Vendas ---
elif grafico == "Previs√£o de Vendas (Prophet)":
    with st.spinner("Treinando modelo..."):
        modelo, previsao = treinar_modelo_prophet(df)

    st.subheader("Previs√£o de Vendas para os Pr√≥ximos 30 Dias")
    fig = plot_plotly(modelo, previsao)
    st.plotly_chart(fig, use_container_width=True)

    st.subheader("Componentes da Previs√£o")
    fig2 = modelo.plot_components(previsao)
    st.pyplot(fig2)
